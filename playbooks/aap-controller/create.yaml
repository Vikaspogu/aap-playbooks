---
- name: Create RHEL VM template
  ansible.builtin.import_playbook: '../proxmox/create-vm-template.yaml'
  vars:
    id: 9000
    vm_name: rhel-9.3-cloudinit-template

- name: Import CloudInit VM
  ansible.builtin.import_playbook: '../proxmox/create-cloudinit-vm.yaml'
  vars:
    vm_name: aap-controller
    template_name: rhel-9.3-cloudinit-template
    mac_address: bc:24:11:a0:6e:7a
    cores: 4
    memory: 16384
    disk_size: 212G

- name: Start AAP VM
  ansible.builtin.import_playbook: '../proxmox/start-vm.yaml'
  vars:
    vm_name: aap-controller

- name: Playbook to Create VM template
  hosts: aap-controller
  gather_facts: false
  tasks:
    - name: Wait 600 seconds for target connection to become reachable/usable
      ansible.builtin.wait_for_connection:
        delay: 30
        timeout: 600

- name: Download and install AAP on the controller
  hosts: aap-controller
  gather_facts: false
  become: false
  tags: aap_installation
  roles:
    - infra.aap_utilities.aap_setup_download
    - infra.aap_utilities.aap_setup_prepare
    - infra.aap_utilities.aap_setup_install
  vars_files:
    - ../../vars/aap-inventory.yaml
  pre_tasks:
    - name: Install required packages
      become: true
      ansible.builtin.dnf:
        name:
          - glibc-langpack-en
          - ansible-core
          - git
          - wget
          - unzip
          - tar
          - rsync
          - python3
          - python3-pip

    - name: Install boto and botocore python package
      become: true
      ansible.builtin.pip:
        name:
          - boto3
          - botocore

  post_tasks:
    - name: Create sops directory
      become_user: awx
      become: true
      ansible.builtin.file:
        path: /var/lib/awx/.sops-key
        state: directory
        mode: '0644'

    - name: Copy sops key
      become: true
      become_user: root
      ansible.builtin.copy:
        src: '/Users/vikaspogu/.config/sops/age/keys.txt'
        dest: '/var/lib/awx/.sops-key/keys.txt'
        mode: '0644'
        owner: awx
        group: awx

    - name: Get absolute path to this Git repository # noqa: command-instead-of-module
      ansible.builtin.command: git rev-parse --show-toplevel
      delegate_to: localhost
      become: false
      run_once: true
      register: repository_path
      changed_when: false
      check_mode: false
      failed_when: repository_path.rc != 0

    - name: Set the license using a file
      awx.awx.license:
        controller_host: '{{ controller_hostname }}'
        controller_username: '{{ controller_username }}'
        controller_password: '{{ controller_password }}'
        manifest: '{{ repository_path.stdout }}/manifest_subscription.zip'
        delegate_to: localhost
